      INTEGER( KIND=8 ) :: pomp2_region_1

      CHARACTER (LEN=999), parameter :: pomp2_ctc_1 =&
        "103*regionType=parallel*sscl=test8.f90:27:27*escl=test8.f90:44:44*hasIf=1*hasNumThreads=1*hasReduction=1**"

      INTEGER( KIND=8 ) :: pomp2_region_2

      CHARACTER (LEN=999), parameter :: pomp2_ctc_2 =&
        "110*regionType=do*sscl=test8.f90:30:30*escl=test8.f90:35:35*hasReduction=1*scheduleType=dynamic,5*hasCollapse=1**"

      INTEGER( KIND=8 ) :: pomp2_region_3

      CHARACTER (LEN=999), parameter :: pomp2_ctc_3 =&
        "78*regionType=sections*sscl=test8.f90:37:37*escl=test8.f90:42:42*numSections=2**"

      INTEGER( KIND=8 ) :: pomp2_region_4

      CHARACTER (LEN=999), parameter :: pomp2_ctc_4 =&
        "64*regionType=parallel*sscl=test8.f90:46:46*escl=test8.f90:50:50**"

      INTEGER( KIND=8 ) :: pomp2_region_5

      CHARACTER (LEN=999), parameter :: pomp2_ctc_5 =&
        "72*regionType=task*sscl=test8.f90:47:47*escl=test8.f90:49:49*hasUntied=1**"

      INTEGER( KIND=8 ) :: pomp2_region_6

      CHARACTER (LEN=999), parameter :: pomp2_ctc_6 =&
        "160*regionType=paralleldo*sscl=test8.f90:52:52*escl=test8.f90:59:59*hasIf=1*hasNumThreads=1*hasReduction=1*scheduleType=static,chunkif*hasCollapse=1*hasOrdered=1**"

      INTEGER( KIND=8 ) :: pomp2_region_7

      CHARACTER (LEN=999), parameter :: pomp2_ctc_7 =&
        "63*regionType=ordered*sscl=test8.f90:54:54*escl=test8.f90:56:56**"

      INTEGER( KIND=8 ) :: pomp2_region_8

      CHARACTER (LEN=999), parameter :: pomp2_ctc_8 =&
        "111*regionType=parallelsections*sscl=test8.f90:61:61*escl=test8.f90:66:66*hasIf=1*hasNumThreads=1*hasReduction=1**"

      INTEGER( KIND=8 ) :: pomp2_region_9

      CHARACTER (LEN=999), parameter :: pomp2_ctc_9 =&
        "112*regionType=parallelworkshare*sscl=test8.f90:68:68*escl=test8.f90:70:70*hasIf=1*hasNumThreads=1*hasReduction=1**"


      integer ( kind=4 ) :: pomp2_lib_get_max_threads
      logical :: pomp2_test_lock
      integer ( kind=4 ) :: pomp2_test_nest_lock
      integer ( kind=8 ) :: pomp2_old_task, pomp2_new_task 
      logical :: pomp2_if 
      integer ( kind=4 ) :: pomp2_num_threads 
      common /cb000/ pomp2_region_1,&
              pomp2_region_2,&
              pomp2_region_3,&
              pomp2_region_4,&
              pomp2_region_5,&
              pomp2_region_6,&
              pomp2_region_7,&
              pomp2_region_8,&
              pomp2_region_9
